'''闭包，内层函数使用了外层函数中的变量，就是闭包。'''
def outer():
	a = 10
	def inner():
		print(a)  # 这个就是闭包
	return inner  # 闭包通常都是返回内层函数

'''闭包有什么用呢。当我们外部访问outer函数，得到的结果就是inner函数。'''
a = outer()
'''此时，我们拿到了一个变量ret，而这个变量ret是outer()的返回值，也就是inner函数，所以，我们可以'''
a()  # 此时执行的是inner这个函数。

'''由于函数inner的执行时间是在outer()外部，这就决定了inner执行的时间我们是不确定的，而变量a是一个局部变量，正常情况下执
行完outer()，它就没有意义了。但是，此时由于inner函数执行时间的不确定，又必须保证inner能正常执行。python就规定，闭包函数
中使用的变量会常驻内存。而且，在outer()外部，是无法改变这个值的，故称：闭包。目的有两个：其一是不许外面改变这个变量。其
二是让这个变量常驻于内存。

闭包的应用：装饰器
'''